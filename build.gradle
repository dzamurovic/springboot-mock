import org.gradle.api.tasks.Copy

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("com.moowork.gradle:gradle-node-plugin:0.11")
    }
}

apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'com.moowork.node'

group = 'rs.ezamur'
version = '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

project.war.baseName = 'springbootmock'

repositories { mavenCentral() }

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-rest:$springBootVersion"
    compile "org.postgresql:postgresql:9.3-1100-jdbc4"
    compile "commons-dbcp:commons-dbcp:1.4"
    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testCompile "junit:junit:4.11"
    testCompile "org.hsqldb:hsqldb:2.3.1"
    testCompile "org.mockito:mockito-all:1.9.5"
}

task copyToLib(type: Copy) {
    into "$buildDir/lib"
    from(configurations.compile)
}

task stage(type: Copy, dependsOn: [clean, build, copyToLib]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)

war {
    manifest {
        attributes 'Version': version
    }
}
